#!/bin/bash

set -e

# Function to print status messages
status() {
    echo -e "\e[1;32m[*] $1\e[0m"
}

# Function to handle errors
error() {
    echo -e "\e[1;31m[!] $1\e[0m" >&2
    exit 1
}

# Function to install a tool and check its installation
install_tool() {
    tool_name=$1
    install_command=$2
    verify_command=$3

    status "Installing $tool_name..."
    eval "$install_command" || error "Failed to install $tool_name"
    
    status "Verifying $tool_name installation..."
    eval "$verify_command" || error "$tool_name installation verification failed"
    status "$tool_name installed and verified successfully."
}

# 1. System Preparation
status "Updating and upgrading the system..."
sudo apt update && sudo apt full-upgrade -y || error "System update and upgrade failed"

# Install curl first
install_tool "curl" "sudo apt install -y curl" "curl --version"

# 2. Install Advanced Military Tools and Databases
# Security Tools
install_tool "Metasploit Framework" "curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate && chmod +x msfupdate && sudo ./msfupdate" "msfconsole --version"
install_tool "Nmap" "sudo apt install -y nmap" "nmap --version"
install_tool "Wireshark" "sudo apt install -y wireshark" "wireshark --version"
install_tool "Tcpdump" "sudo apt install -y tcpdump" "tcpdump --version"
install_tool "GDB" "sudo apt install -y gdb" "gdb --version"
install_tool "Radare2" "sudo apt install -y radare2" "r2 -version"

# Install John the Ripper
install_tool "John the Ripper" "sudo apt install -y john" "john --version"

# Install Binwalk
install_tool "Binwalk" "sudo apt install -y binwalk" "binwalk --version"

# Install Hydra
install_tool "Hydra" "sudo apt install -y hydra" "hydra --version"

# Install Burp Suite
install_tool "Burp Suite" "sudo apt install -y burpsuite" "ls /usr/bin/burpsuite"

# Install OWASP ZAP
install_tool "ZAP" "sudo apt install -y zaproxy" "zaproxy --version"

# Networking Tools
install_tool "Netcat" "sudo apt install -y netcat" "netcat --version"
install_tool "Aircrack-ng" "sudo apt install -y aircrack-ng" "aircrack-ng --version"
install_tool "Yersinia" "sudo apt install -y yersinia" "yersinia --version"
install_tool "Nikto" "sudo apt install -y nikto" "nikto --version"
install_tool "Responder" "sudo apt install -y responder" "responder --version"
install_tool "CrackMapExec" "sudo apt install -y crackmapexec" "crackmapexec --version"
install_tool "Net-tools" "sudo apt install -y net-tools" "ifconfig --version"

# Reverse Engineering Tools
install_tool "Ghidra" "sudo apt install -y ghidra" "ghidra --version"
install_tool "Apktool" "sudo apt install -y apktool" "apktool --version"
install_tool "JADX" "sudo apt install -y jadx" "jadx --version"
install_tool "IDA Free" "curl -L https://out7.hex-rays.com/files/idafree70_linux.run -o idafree.run && chmod +x idafree.run && sudo ./idafree.run" "ls /opt/idafree"

# Forensic Tools
install_tool "Autopsy" "sudo apt install -y autopsy" "autopsy --version"
install_tool "Sleuth Kit" "sudo apt install -y sleuthkit" "tsk_recover --version"
install_tool "Volatility" "sudo apt install -y volatility" "volatility --version"
install_tool "Xplico" "sudo apt install -y xplico" "xplico --version"

# Exploit Development Tools
install_tool "Pwntools" "sudo apt install -y python3-pwntools" "python3 -c 'import pwn; print(pwn.__version__)'"

# Container Security Tools
install_tool "Docker" "sudo apt install -y docker.io && sudo systemctl start docker && sudo systemctl enable docker" "docker --version"

# Additional Powerful Pentest Frameworks
install_tool "BloodHound" "sudo apt install -y bloodhound" "bloodhound --version"
install_tool "Empire" "sudo apt install -y powershell-empire" "powershell-empire --version"
install_tool "Cobalt Strike" "curl -L https://cobaltstrike.com/download | bash" "teamserver --version"
install_tool "Impacket" "sudo apt install -y impacket-scripts" "impacket-smbclient --version"
install_tool "Recon-ng" "sudo apt install -y recon-ng" "recon-ng --version"
install_tool "Maltego" "sudo apt install -y maltego" "maltego --version"
install_tool "Nessus" "curl -L https://www.tenable.com/downloads/api/v1/public/pages/nessus/downloads/11756/download?i_agree_to_tenable_license_agreement=true -o Nessus-8.15.2-debian6_amd64.deb && sudo dpkg -i Nessus-8.15.2-debian6_amd64.deb && sudo systemctl start nessusd && sudo systemctl enable nessusd" "nessus --version"
install_tool "Hashcat" "sudo apt install -y hashcat" "hashcat --version"
install_tool "SecLists" "sudo apt install -y seclists" "ls /usr/share/seclists"
install_tool "FuzzDB" "sudo git clone https://github.com/fuzzdb-project/fuzzdb /opt/fuzzdb" "ls /opt/fuzzdb"

# Military Databases
status "Installing robust military databases..."
sudo apt install -y sqlite3 || error "Failed to install SQLite3"
mkdir -p /opt/military-databases
cd /opt/military-databases || error "Failed to create/access /opt/military-databases directory"

status "Downloading and importing NVD database..."
wget https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-recent.json.gz || error "Failed to download NVD database"
gunzip nvdcve-1.1-recent.json.gz || error "Failed to unzip NVD database"
sqlite3 nvd.db "CREATE TABLE nvd (id TEXT, json TEXT);" || error "Failed to create NVD table"
sqlite3 nvd.db ".import nvdcve-1.1-recent.json nvd" || error "Failed to import NVD data"

status "Downloading and importing CWE database..."
wget https://cwe.mitre.org/data/xml/cwec_latest.xml.zip || error "Failed to download CWE database"
unzip cwec_latest.xml.zip -d /opt/military-databases/cwe || error "Failed to unzip CWE database"
sqlite3 cwe.db "CREATE TABLE cwe (id TEXT, xml TEXT);" || error "Failed to create CWE table"
sqlite3 cwe.db ".import cwec_latest.xml cwe" || error "Failed to import CWE data"

status "All tools and databases have been installed successfully."

# Install AutoRecon
status "Installing AutoRecon..."
sudo apt install -y python3-venv python3-pip || error "Failed to install Python packages"
python3 -m venv autorecon_env || error "Failed to create virtual environment for AutoRecon"
source autorecon_env/bin/activate || error "Failed to activate virtual environment for AutoRecon"
pip install git+https://github.com/Tib3rius/AutoRecon.git || error "Failed to install AutoRecon"
deactivate
status "AutoRecon installed successfully."

# Install and Configure Sublime Text
status "Installing Sublime Text..."
wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add - || error "Failed to add Sublime Text GPG key"
sudo apt-get install apt-transport-https || error "Failed to install apt-transport-https"
echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list
sudo apt-get update || error "Failed to update package list after adding Sublime Text repo"
sudo apt-get install -y sublime-text || error "Failed to install Sublime Text"
sudo update-alternatives --set editor /usr/bin/subl || error "Failed to set Sublime Text as default editor"
status "Sublime Text installed and configured successfully."

# 3. Configure the Environment
# 3.1 Network Configuration
status "Setting up private networks for each user..."

# Create separate network namespaces
sudo ip netns add soldier_ns || error "Failed to create namespace for soldier"
sudo ip netns add officer_ns || error "Failed to create namespace for officer"
sudo ip netns add general_ns || error "Failed to create namespace for general"

# Create veth pairs for each namespace
sudo ip link add veth_soldier type veth peer name veth_soldier_br || error "Failed to create veth pair for soldier"
sudo ip link add veth_officer type veth peer name veth_officer_br || error "Failed to create veth pair for officer"
sudo ip link add veth_general type veth peer name veth_general_br || error "Failed to create veth pair for general"

# Assign veth pairs to namespaces
sudo ip link set veth_soldier netns soldier_ns || error "Failed to set veth_soldier to soldier_ns"
sudo ip link set veth_officer netns officer_ns || error "Failed to set veth_officer to officer_ns"
sudo ip link set veth_general netns general_ns || error "Failed to set veth_general to general_ns"

# Set IP addresses in namespaces
sudo ip netns exec soldier_ns ip addr add 192.168.10.1/24 dev veth_soldier || error "Failed to set IP for soldier_ns"
sudo ip netns exec officer_ns ip addr add 192.168.20.1/24 dev veth_officer || error "Failed to set IP for officer_ns"
sudo ip netns exec general_ns ip addr add 192.168.30.1/24 dev veth_general || error "Failed to set IP for general_ns"

# Bring up interfaces in namespaces
sudo ip netns exec soldier_ns ip link set veth_soldier up || error "Failed to bring up veth_soldier"
sudo ip netns exec officer_ns ip link set veth_officer up || error "Failed to bring up veth_officer"
sudo ip netns exec general_ns ip link set veth_general up || error "Failed to bring up veth_general"

# Bring up bridge interfaces
sudo ip link set veth_soldier_br up || error "Failed to bring up veth_soldier_br"
sudo ip link set veth_officer_br up || error "Failed to bring up veth_officer_br"
sudo ip link set veth_general_br up || error "Failed to bring up veth_general_br"

# Create bridges
sudo brctl addbr br_soldier || error "Failed to create bridge for soldier"
sudo brctl addbr br_officer || error "Failed to create bridge for officer"
sudo brctl addbr br_general || error "Failed to create bridge for general"

# Add veth pairs to bridges
sudo brctl addif br_soldier veth_soldier_br || error "Failed to add veth_soldier_br to br_soldier"
sudo brctl addif br_officer veth_officer_br || error "Failed to add veth_officer_br to br_officer"
sudo brctl addif br_general veth_general_br || error "Failed to add veth_general_br to br_general"

# Bring up bridges
sudo ip link set br_soldier up || error "Failed to bring up br_soldier"
sudo ip link set br_officer up || error "Failed to bring up br_officer"
sudo ip link set br_general up || error "Failed to bring up br_general"

status "Private networks for each user configured successfully."

# 3.2 User and Access Management
status "Creating military-grade users..."
sudo useradd -m -s /bin/bash soldier || error "Failed to create soldier user"
sudo useradd -m -s /bin/bash officer || error "Failed to create officer user"
sudo useradd -m -s /bin/bash general || error "Failed to create general user"

status "Setting passwords for users..."
echo "soldier:soldierpassword" | sudo chpasswd || error "Failed to set password for soldier"
echo "officer:officerpassword" | sudo chpasswd || error "Failed to set password for officer"
echo "general:generalpassword" | sudo chpasswd || error "Failed to set password for general"

status "Configuring sudoers for privileged access..."
echo "officer ALL=(ALL) NOPASSWD:ALL" | sudo tee -a /etc/sudoers || error "Failed to configure sudoers for officer"
echo "general ALL=(ALL) NOPASSWD:ALL" | sudo tee -a /etc/sudoers || error "Failed to configure sudoers for general"
echo "general ALL=(ALL) ALL" | sudo tee -a /etc/sudoers.d/general || error "Failed to configure full sudo privileges for general"

status "User and access management configuration completed."

# 3.3 Logging and Monitoring
status "Installing logging and monitoring tools..."
sudo apt install -y rsyslog nagios-nrpe-server nagios-plugins || error "Failed to install logging and monitoring tools"

status "Configuring rsyslog..."
sudo systemctl enable rsyslog || error "Failed to enable rsyslog"
sudo systemctl start rsyslog || error "Failed to start rsyslog"

status "Configuring Nagios NRPE server..."
sudo systemctl enable nagios-nrpe-server || error "Failed to enable Nagios NRPE server"
sudo systemctl start nagios-nrpe-server || error "Failed to start Nagios NRPE server"

status "Logging and monitoring configuration completed."

# 4. Verification and Usage Instructions
status "Verifying installations and configurations..."

status "Verifying installed tools..."
msfconsole --version || error "Metasploit verification failed"
nmap --version || error "Nmap verification failed"
wireshark --version || error "Wireshark verification failed"
tcpdump --version || error "Tcpdump verification failed"
gdb --version || error "GDB verification failed"
r2 -version || error "Radare2 verification failed"
binwalk --version || error "Binwalk verification failed"
john --version || error "John the Ripper verification failed"
hydra --version || error "Hydra verification failed"
netcat --version || error "Netcat verification failed"
aircrack-ng --version || error "Aircrack-ng verification failed"
burpsuite --version || error "Burp Suite verification failed"
zaproxy --version || error "OWASP ZAP verification failed"
yersinia --version || error "Yersinia verification failed"
nikto --version || error "Nikto verification failed"
responder --version || error "Responder verification failed"
crackmapexec --version || error "CrackMapExec verification failed"
ghidra --version || error "Ghidra verification failed"
apktool --version || error "Apktool verification failed"
jadx --version || error "JADX verification failed"
ls /opt/idafree || error "IDA Free verification failed"
autopsy --version || error "Autopsy verification failed"
tsk_recover --version || error "Sleuth Kit verification failed"
volatility --version || error "Volatility verification failed"
xplico --version || error "Xplico verification failed"
python3 -c 'import pwn; print(pwn.__version__)' || error "Pwntools verification failed"
docker --version || error "Docker verification failed"
bloodhound --version || error "BloodHound verification failed"
powershell-empire --version || error "Empire verification failed"
teamserver --version || error "Cobalt Strike verification failed"
impacket-smbclient --version || error "Impacket verification failed"
recon-ng --version || error "Recon-ng verification failed"
maltego --version || error "Maltego verification failed"
nessus --version || error "Nessus verification failed"
hashcat --version || error "Hashcat verification failed"
ls /usr/share/seclists || error "SecLists verification failed"
ls /opt/fuzzdb || error "FuzzDB verification failed"

status "Verifying network configuration..."
ip a || error "Network interface verification failed"
ufw status || error "UFW status verification failed"

status "Verifying user and access management..."
sudo -l -U officer || error "Officer user verification failed"
sudo -l -U general || error "General user verification failed"

status "Verifying logging and monitoring..."
sudo systemctl status rsyslog || error "Rsyslog status verification failed"
sudo systemctl status nagios-nrpe-server || error "Nagios NRPE server status verification failed"

status "Military-grade lab setup completed successfully!"
