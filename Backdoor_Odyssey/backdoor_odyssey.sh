#!/bin/bash

# ------------------------------
# Configuration Variables
# ------------------------------

# Project settings
PROJECT_DIR=~/shellshocks_backdoor
VENV_NAME="shellshocks_brain"

# Web page settings
PAGE_TITLE="Watch Dogs: Shellshocks Backdoor"
HEADER_TEXT="Watch Dogs: Hack the City"
SUBHEADER_TEXT="\"Everything is Connected.\""
FOOTER_TEXT="&copy; 2024 Shellshocks Backdoor. All rights reserved."

# Asset settings
BACKGROUND_IMAGE="watchdogs-background.jpg"
CLUE_MP3="clue.mp3"
BACKGROUND_MUSIC="background-music.mp3"

# Other settings
VULNERABLE_USER="vulnerable_user"
VULNERABLE_PASSWORD="password"

# ------------------------------
# Script Functions and Setup
# ------------------------------

# Function to print messages with color
print_step() {
    COLOR=$1
    MESSAGE=$2
    echo -e "\e[${COLOR}m${MESSAGE}\e[0m"
}

# Update and upgrade the system
print_step "34" "Updating and upgrading the system..."  # Blue text
sudo apt-get update -y
sudo apt-get upgrade -y

# Install required tools and dependencies
print_step "34" "Installing required tools and dependencies..."  # Blue text
sudo apt-get install -y openssh-server netcat nmap apache2 telnet dnsutils python3-pip python3-venv

# Disable AppArmor
print_step "31" "Disabling AppArmor for reduced system security..."  # Red text
sudo systemctl stop apparmor
sudo systemctl disable apparmor

# Disable UFW firewall
print_step "31" "Disabling UFW firewall..."  # Red text
sudo ufw disable

# Create a directory for the project
print_step "34" "Creating project directory and setting up the virtual environment..."  # Blue text
mkdir -p $PROJECT_DIR
cd $PROJECT_DIR

# Set up Python virtual environment named shellshocks_brain
print_step "34" "Setting up Python virtual environment named $VENV_NAME..."  # Blue text
python3 -m venv $VENV_NAME

# Activate the virtual environment
print_step "32" "Activating the virtual environment..."  # Green text
source $VENV_NAME/bin/activate

# Install Python dependencies within the virtual environment
print_step "34" "Installing Python dependencies within the virtual environment..."  # Blue text
pip install termcolor cryptography requests dnspython

# Allow root login via SSH (not recommended for secure systems, but done here for vulnerability purposes)
print_step "31" "Allowing root login via SSH (for vulnerability purposes)..."  # Red text
sudo sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
sudo systemctl restart ssh

# Create a weak user account with a weak password
print_step "31" "Creating a weak user account with a weak password..."  # Red text
sudo useradd -m -p $(openssl passwd -1 $VULNERABLE_PASSWORD) $VULNERABLE_USER

# Set up a vulnerable web server
print_step "34" "Setting up a vulnerable web server..."  # Blue text
sudo mkdir -p /var/www/html/vulnerable
echo "<?php system(\$_GET['cmd']); ?>" | sudo tee /var/www/html/vulnerable/shell.php

# Allow SSH connections on port 22 and open an additional port (9002) for other services
print_step "34" "Configuring SSH and opening additional ports..."  # Blue text
sudo sed -i 's/#Port 22/Port 22/' /etc/ssh/sshd_config
echo "Port 9002" | sudo tee -a /etc/ssh/sshd_config
sudo systemctl restart ssh

# Set up an outdated version of Apache
print_step "31" "Setting up an outdated version of Apache..."  # Red text
sudo apt-get install -y apache2=2.4.29-1ubuntu4.14

# Configure Apache to serve the vulnerable web page
print_step "34" "Configuring Apache to serve the vulnerable web page..."  # Blue text
sudo ln -s /var/www/html/vulnerable /var/www/html/vulnerable_site
sudo systemctl restart apache2

# Install an older version of Python to introduce additional vulnerabilities
print_step "31" "Installing an older version of Python..."  # Red text
sudo apt-get install -y python2.7

# Enable IP forwarding to make the system act as a router (if required)
print_step "34" "Enabling IP forwarding (if required)..."  # Blue text
sudo sysctl -w net.ipv4.ip_forward=1

# Open specific ports to simulate a vulnerable system
print_step "31" "Opening specific ports to simulate a vulnerable system..."  # Red text
sudo iptables -A INPUT -p tcp --dport 9002 -j ACCEPT

# Display the setup completion message
print_step "32" "Victim machine setup complete. The machine is now vulnerable."  # Green text

# (Optional) Set the machine to reboot at a random time daily to simulate user activity
print_step "34" "Setting the machine to reboot at random times daily (optional)..."  # Blue text
echo "0 0 * * * /sbin/shutdown -r +$((RANDOM % 60))" | sudo tee -a /etc/crontab

# Restart the machine to apply all changes
print_step "34" "Restarting the machine to apply all changes..."  # Blue text
sudo reboot

# Create directories for the web project
print_step "34" "Creating project directories for the Watch Dogs themed webpage..."  # Blue text
mkdir -p $PROJECT_DIR/assets

# Write the HTML file
print_step "34" "Writing HTML file..."  # Blue text
cat <<EOL > $PROJECT_DIR/index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>$PAGE_TITLE</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <header class="header">
            <h1 class="glitch" data-text="$HEADER_TEXT">$HEADER_TEXT</h1>
            <p class="subheader">$SUBHEADER_TEXT</p>
        </header>

        <section class="main-content">
            <div class="background-overlay"></div>
            <div class="matrix-overlay"></div>
            <img src="assets/$BACKGROUND_IMAGE" alt="Watch Dogs Background" class="background-image">

            <div class="button-container">
                <button class="cyberpunk-button" onclick="playSound()">Would you like a clue?</button>
                <button class="cyberpunk-button" onclick="playSound()">Would you like a clue?</button>
                <button class="cyberpunk-button" onclick="playSound()">Would you like a clue?</button>
            </div>

            <div class="music-controls">
                <button id="play-btn" class="cyberpunk-button" onclick="toggleMusic()">Play Music</button>
            </div>
        </section>

        <footer class="footer">
            <p>$FOOTER_TEXT</p>
        </footer>
    </div>

    <audio id="clue-sound" src="assets/$CLUE_MP3" preload="auto"></audio>
    <audio id="background-music" src="assets/$BACKGROUND_MUSIC" preload="auto" loop></audio>

    <script src="scripts.js"></script>
</body>
</html>
EOL

# Write the CSS file
print_step "34" "Writing CSS file..."  # Blue text
cat <<EOL > $PROJECT_DIR/styles.css
/* General Styles */
body {
    font-family: 'Courier New', Courier, monospace;
    color: #00FFCC; /* Neon cyan color */
    background-color: #0A0A0A; /* Dark background */
    margin: 0;
    padding: 0;
    overflow: hidden;
}

.container {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100vh;
}

/* Header Styles */
.header {
    text-align: center;
    padding: 20px;
    position: relative;
    z-index: 2;
}

.glitch {
    font-size: 2.5em;
    color: #00FFCC;
    position: relative;
    display: inline-block;
    animation: glitch 1.5s infinite;
    text-shadow: 2px 2px 3px rgba(0, 255, 204, 0.8);
}

.glitch::before,
.glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: transparent;
}

.glitch::before {
    left: 2px;
    text-shadow: -2px 0 cyan;
    clip: rect(24px, 550px, 90px, 0);
    animation: glitch-anim 2.5s infinite linear alternate-reverse;
}

.glitch::after {
    left: -2px;
    text-shadow: -2px 0 lime;
    clip: rect(85px, 9999px, 140px, 0);
    animation: glitch-anim2 2s infinite linear alternate-reverse;
}

.subheader {
    font-size: 1.2em;
    color: #FFFFFF; /* White color for subheader */
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
}

/* Glitch Animations */
@keyframes glitch {
    0% {
        transform: translate(0);
    }
    20% {
        transform: translate(-2px, 2px);
    }
    40% {
        transform: translate(-2px, -2px);
    }
    60% {
        transform: translate(2px, 2px);
    }
    80% {
        transform: translate(2px, -2px);
    }
    100% {
        transform: translate(0);
    }
}

@keyframes glitch-anim {
    0% {
        clip: rect(42px, 9999px, 44px, 0);
    }
    5% {
        clip: rect(50px, 9999px, 56px, 0);
    }
    10% {
        clip: rect(20px, 9999px, 24px, 0);
    }
    15% {
        clip: rect(54px, 9999px, 57px, 0);
    }
    20% {
        clip: rect(15px, 9999px, 18px, 0);
    }
    25% {
        clip: rect(42px, 9999px, 47px, 0);
    }
    30% {
        clip: rect(62px, 9999px, 67px, 0);
    }
    35% {
        clip: rect(39px, 9999px, 45px, 0);
    }
    40% {
        clip: rect(27px, 9999px, 33px, 0);
    }
    45% {
        clip: rect(11px, 9999px, 15px, 0);
    }
    50% {
        clip: rect(67px, 9999px, 73px, 0);
    }
    55% {
        clip: rect(30px, 9999px, 36px, 0);
    }
    60% {
        clip: rect(67px, 9999px, 73px, 0);
    }
    65% {
        clip: rect(39px, 9999px, 45px, 0);
    }
    70% {
        clip: rect(23px, 9999px, 29px, 0);
    }
    75% {
        clip: rect(10px, 9999px, 14px, 0);
    }
    80% {
        clip: rect(62px, 9999px, 69px, 0);
    }
    85% {
        clip: rect(15px, 9999px, 21px, 0);
    }
    90% {
        clip: rect(53px, 9999px, 59px, 0);
    }
    95% {
        clip: rect(48px, 9999px, 52px, 0);
    }
    100% {
        clip: rect(13px, 9999px, 17px, 0);
    }
}

@keyframes glitch-anim2 {
    0% {
        clip: rect(22px, 9999px, 25px, 0);
    }
    5% {
        clip: rect(46px, 9999px, 50px, 0);
    }
    10% {
        clip: rect(12px, 9999px, 14px, 0);
    }
    15% {
        clip: rect(48px, 9999px, 51px, 0);
    }
    20% {
        clip: rect(22px, 9999px, 24px, 0);
    }
    25% {
        clip: rect(40px, 9999px, 43px, 0);
    }
    30% {
        clip: rect(17px, 9999px, 22px, 0);
    }
    35% {
        clip: rect(59px, 9999px, 62px, 0);
    }
    40% {
        clip: rect(16px, 9999px, 20px, 0);
    }
    45% {
        clip: rect(48px, 9999px, 53px, 0);
    }
    50% {
        clip: rect(8px, 9999px, 11px, 0);
    }
    55% {
        clip: rect(43px, 9999px, 46px, 0);
    }
    60% {
        clip: rect(12px, 9999px, 15px, 0);
    }
    65% {
        clip: rect(26px, 9999px, 30px, 0);
    }
    70% {
        clip: rect(57px, 9999px, 62px, 0);
    }
    75% {
        clip: rect(40px, 9999px, 44px, 0);
    }
    80% {
        clip: rect(33px, 9999px, 39px, 0);
    }
    85% {
        clip: rect(44px, 9999px, 48px, 0);
    }
    90% {
        clip: rect(14px, 9999px, 18px, 0);
    }
    95% {
        clip: rect(58px, 9999px, 63px, 0);
    }
    100% {
        clip: rect(17px, 9999px, 20px, 0);
    }
}

/* Main Content Styles */
.main-content {
    flex: 1;
    position: relative;
    text-align: center;
}

.background-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    filter: brightness(0.3);
}

.background-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(255, 0, 150, 0.2), rgba(0, 204, 255, 0.2));
    mix-blend-mode: overlay;
    animation: backgroundShift 10s ease infinite alternate;
    z-index: 1;
}

/* Matrix Overlay */
.matrix-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(to bottom, rgba(0, 255, 0, 0.1) 1px, transparent 1px),
                      linear-gradient(to right, rgba(0, 255, 0, 0.1) 1px, transparent 1px);
    background-size: 50px 50px;
    animation: matrixShift1 5s infinite linear, matrixShift2 7s infinite linear alternate;
    z-index: 2;
}

@keyframes matrixShift1 {
    0% {
        background-position: 0 0;
    }
    100% {
        background-position: 100px 100px;
    }
}

@keyframes matrixShift2 {
    0% {
        background-position: 0 0;
    }
    100% {
        background-position: -100px -100px;
    }
}

@keyframes matrixShift3 {
    0% {
        background-position: 0 0;
    }
    100% {
        background-position: 50px 50px;
    }
}

@keyframes matrixShift4 {
    0% {
        background-position: 0 0;
    }
    100% {
        background-position: -50px -50px;
    }
}

/* Button Styles */
.button-container {
    position: relative;
    top: 50%;
    transform: translateY(-50%);
}

.cyberpunk-button {
    background-color: transparent;
    color: #00FFCC;
    padding: 12px 24px;
    margin: 10px;
    border: 2px solid #00FFCC;
    cursor: pointer;
    font-size: 1.2em;
    transition: all 0.3s ease;
    text-transform: uppercase;
    box-shadow: 0 0 5px rgba(0, 255, 204, 0.6), 0 0 10px rgba(0, 255, 204, 0.6), 0 0 15px rgba(0, 255, 204, 0.6);
}

.cyberpunk-button:hover {
    background-color: #00FFCC;
    color: #000;
    box-shadow: 0 0 10px rgba(0, 255, 204, 0.8), 0 0 20px rgba(0, 255, 204, 0.8), 0 0 30px rgba(0, 255, 204, 0.8);
}

/* Music Controls */
.music-controls {
    margin-top: 20px;
    text-align: center;
}

.music-controls .cyberpunk-button {
    padding: 10px 20px;
    font-size: 1.1em;
}

/* Footer Styles */
.footer {
    text-align: center;
    padding: 10px;
    background-color: #0A0A0A;
    color: #00FFCC;
}

/* Background Animation */
@keyframes backgroundShift {
    0% {
        background-position: 0% 0%;
    }
    100% {
        background-position: 100% 100%;
    }
}
EOL

# Write the JavaScript file
print_step "34" "Writing JavaScript file..."  # Blue text
cat <<EOL > $PROJECT_DIR/scripts.js
function playSound() {
    var audio = document.getElementById('clue-sound');
    audio.play();
}

function toggleMusic() {
    var music = document.getElementById('background-music');
    var playBtn = document.getElementById('play-btn');
    if (music.paused) {
        music.play();
        playBtn.innerText = 'Pause Music';
    } else {
        music.pause();
        playBtn.innerText = 'Play Music';
    }
}
EOL

# Provide instructions for adding assets
print_step "32" "Project structure created. Please add the '$BACKGROUND_IMAGE', '$CLUE_MP3', and '$BACKGROUND_MUSIC' files to the assets directory."  # Green text
